# Fluent Bit 設定ファイル
[SERVICE]
    Flush               5
    Grace               30
    Log_Level           info

# # 全てのログをコピーしてS3用のタグを付ける
# # 「OutOfMemoryError: Container killed due to memory usage」というエラーが出たためコメントアウト
# [FILTER]
#     Name                rewrite_tag
#     Match               *
#     Rule                $log ^(.*)$ s3_raw_logs false

# S3への全てのログの転送（フィルタリングなし）
[OUTPUT]
    Name                s3
    Match               *
    region              ap-northeast-1
    bucket              learn-ecs-logs-prod
    total_file_size     1M
    upload_timeout      1m
    use_put_object      On
    s3_key_format       /ecs-logs/%Y/%m/%d/%H

# ALB ヘルスチェックログを出力しないように設定
[FILTER]
    Name                grep
    Match               *
    Exclude             log \[GIN\] .* \| GET.*\"/graphiql\"

# modify プラグインでログの形式を変更。Remove プラグインでメタデータを削除
[FILTER]
    Name                modify
    Match               *
    Remove              container_id
    Remove              container_name
    Remove              source
    Remove              ecs_cluster
    Remove              ecs_task_arn
    Remove              ecs_task_definition

# CloudWatch Logs にログを出力
[OUTPUT]
    Name                cloudwatch_logs
    Match               *
    region              ap-northeast-1
    log_group_name      /ecs/learn-backend-prod
    log_stream_prefix   backend/
    auto_create_group   true    

###### ログの形式（例） ######
# ALB ヘルスチェックログ
# ```
# {
#     "log": "[GIN] 2024/09/21 - 12:26:19 | 200 |     107.535µs |      10.0.4.183 | GET      \"/graphiql\"",
#     "container_id": "5bcfde4a31da44f29d56baefa248a88d-1955534044",
#     "container_name": "learn-backend-container-prod",
#     "source": "stdout",
#     "ecs_cluster": "learn-backend-ecs-cluster-prod",
#     "ecs_task_arn": "arn:aws:ecs:ap-northeast-1:235484765172:task/learn-backend-ecs-cluster-prod/5bcfde4a31da44f29d56baefa248a88d",
#     "ecs_task_definition": "learn-backend-task-definition-prod:38"
# }
# ```

###### ログの出力結果は下記の通り ######
# {"log":"[GIN-debug] POST /query --> main.main.graphqlHandler.func3 (4 handlers)"}
