# .github/workflows/docker-cache-retention.yml
name: Docker Cache Retention

on:
  schedule:
    - cron: '0 23 * * *' # 日本時間で毎日8:00に実行
  push:
    branches: 
    - "main"
  workflow_dispatch:  # 手動実行のオプション

env:
  ENV_VAR: prod  # または適切な環境変数

jobs:
  retain-docker-caches:
    runs-on: ubuntu-latest
    environment: 
      name: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      ### Lambda Migrate キャッシュ ###
      - name: Cache Docker layers for Lambda Migrate
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache-lambda-migrate
          key: ${{ runner.os }}-buildx-lambda-migrate-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-lambda-migrate-

      ### Backend ECS キャッシュ ###
      - name: Cache Docker layers for Backend ECS
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache-ecs
          key: ${{ runner.os }}-buildx-backend-ecs-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-backend-ecs-

      ### Frontend ECS キャッシュ ###
      - name: Cache Docker layers for Frontend ECS
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache-frontend-ecs
          key: ${{ runner.os }}-buildx-frontend-ecs-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-frontend-ecs-

      ### Lambda Migrate イメージビルド ###
      - name: Build Lambda Migrate Image
        run: |
          docker buildx create --use
          docker buildx build \
            -t "db_migration_lambda_retention:${{ github.sha }}" \
            -f backend/lambda/migrate/Dockerfile \
            --cache-from type=local,src=/tmp/.buildx-cache-lambda-migrate \
            --cache-to type=local,dest=/tmp/.buildx-cache-lambda-migrate-new,mode=max \
            --load \
            ./backend

      ### Backend イメージビルド ###
      - name: Build Backend Image
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/arm64 \
            -t "backend-private-repository-${ENV_VAR}:${{ github.sha }}" \
            -f backend/docker/${ENV_VAR}/Dockerfile \
            --cache-from type=local,src=/tmp/.buildx-cache-ecs \
            --cache-to type=local,dest=/tmp/.buildx-cache-ecs-new,mode=max \
            --load \
            .

      ### Frontend イメージビルド ###
      - name: Build Frontend Image
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/arm64 \
            -t "frontend-private-repository-${ENV_VAR}:${{ github.sha }}" \
            -f frontend/docker/${ENV_VAR}/Dockerfile \
            --cache-from type=local,src=/tmp/.buildx-cache-frontend-ecs \
            --cache-to type=local,dest=/tmp/.buildx-cache-frontend-ecs-new,mode=max \
            --load \
            frontend

      ### キャッシュの移動 ###
      - name: Move caches
        run: |
          rm -rf /tmp/.buildx-cache-lambda-migrate
          mv /tmp/.buildx-cache-lambda-migrate-new /tmp/.buildx-cache-lambda-migrate
          rm -rf /tmp/.buildx-cache-ecs
          mv /tmp/.buildx-cache-ecs-new /tmp/.buildx-cache-ecs
          rm -rf /tmp/.buildx-cache-frontend-ecs
          mv /tmp/.buildx-cache-frontend-ecs-new /tmp/.buildx-cache-frontend-ecs

      ### キャッシュの状態を報告 ###
      - name: Report cache status
        run: |
          echo "Docker cache retention job completed."
          echo "Lambda Migrate cache size: $(du -sh /tmp/.buildx-cache-lambda-migrate | cut -f1)"
          echo "Backend ECS cache size: $(du -sh /tmp/.buildx-cache-ecs | cut -f1)"
          echo "Frontend ECS cache size: $(du -sh /tmp/.buildx-cache-frontend-ecs | cut -f1)"

      # 失敗時はこちらのステップが実行される
      - name: Slack Notification on Failure
        uses: rtCamp/action-slack-notify@v2.0.2
        if: failure()
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_TITLE: GitHub Comment
          SLACK_COLOR: danger
          SLACK_MESSAGE: '<!here> Docker Cache Retention job failed!'
          SLACK_USERNAME: GitHub Actions
